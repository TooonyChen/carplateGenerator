{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\car-plate-generator\\\\src\\\\components\\\\PlateGenerate\\\\PDFGen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsPDF } from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PDFGenerator() {\n  _s();\n  const [pdfUrl, setPdfUrl] = useState('');\n  const location = useLocation();\n  // const CarPlate = location.state?.chinaCarPlate || 'Unknown';\n  const CarPlate = 'B1234'; // FOR TESTING FUNCTION\n\n  useEffect(() => {\n    if (CarPlate !== 'Unknown') {\n      generatePdf();\n    }\n  }, [CarPlate]); // Ensure PDF is generated only when CarPlate is updated\n\n  const generatePdf = () => {\n    const pdf = new jsPDF({\n      orientation: 'landscape',\n      unit: 'px',\n      format: [2598, 1654]\n    });\n    pdf.advancedAPI(); // Switch to \"advanced\" mode\n\n    const today = new Date();\n    const futureDate = new Date(today);\n    futureDate.setDate(today.getDate() + 14); // Calculate 14 days in the future\n    const year = futureDate.getFullYear();\n    const month = futureDate.getMonth() + 1; // Normalize month to 1-based index\n    const day = futureDate.getDate();\n    pdf.addImage('/car-plate.png', 'PNG', 0, 0, 2598, 1654);\n    pdf.setFontSize(250);\n    pdf.text(`${year}`, 400, 200, {\n      align: 'center'\n    });\n    pdf.text(`${month}`, 1050, 200, {\n      align: 'center'\n    });\n    pdf.text(`${day}`, 1550, 200, {\n      align: 'center'\n    });\n    pdf.setFontSize(1300);\n    const verticalStretchMatrix = new pdf.Matrix(0.5, 0, 0, 1, 0, 0);\n    pdf.setCurrentTransformationMatrix(verticalStretchMatrix); // Apply vertical stretch\n    pdf.text(`${CarPlate}`, 1900, 1270); // Display China car plate\n    pdf.compatAPI(); // Switch back to \"compat\" mode\n\n    const pdfBlob = pdf.output('blob');\n    const url = URL.createObjectURL(pdfBlob);\n    setPdfUrl(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generatePdf,\n      children: \"Generate PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: pdfUrl,\n      style: {\n        height: '1000px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(PDFGenerator, \"cm+/bMbTXEH94egDL9XGsLvYDV4=\", false, function () {\n  return [useLocation];\n});\n_c = PDFGenerator;\nexport default PDFGenerator;\nvar _c;\n$RefreshReg$(_c, \"PDFGenerator\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsPDF","jsxDEV","_jsxDEV","PDFGenerator","_s","pdfUrl","setPdfUrl","location","CarPlate","generatePdf","pdf","orientation","unit","format","advancedAPI","today","Date","futureDate","setDate","getDate","year","getFullYear","month","getMonth","day","addImage","setFontSize","text","align","verticalStretchMatrix","Matrix","setCurrentTransformationMatrix","compatAPI","pdfBlob","output","url","URL","createObjectURL","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","style","height","width","_c","$RefreshReg$"],"sources":["D:/Code/car-plate-generator/src/components/PlateGenerate/PDFGen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsPDF } from 'jspdf';\n\nfunction PDFGenerator() {\n    const [pdfUrl, setPdfUrl] = useState('');\n    const location = useLocation();\n    // const CarPlate = location.state?.chinaCarPlate || 'Unknown';\n    const CarPlate = 'B1234'; // FOR TESTING FUNCTION\n\n    useEffect(() => {\n        if (CarPlate !== 'Unknown') {\n            generatePdf();\n        }\n    }, [CarPlate]);  // Ensure PDF is generated only when CarPlate is updated\n\n    const generatePdf = () => {\n        const pdf = new jsPDF({\n            orientation: 'landscape',\n            unit: 'px',\n            format: [2598, 1654]\n        });\n\n        pdf.advancedAPI(); // Switch to \"advanced\" mode\n\n        const today = new Date();\n        const futureDate = new Date(today);\n        futureDate.setDate(today.getDate() + 14);  // Calculate 14 days in the future\n        const year = futureDate.getFullYear();\n        const month = futureDate.getMonth() + 1; // Normalize month to 1-based index\n        const day = futureDate.getDate();\n\n        pdf.addImage('/car-plate.png', 'PNG', 0, 0, 2598, 1654);\n\n        pdf.setFontSize(250);\n        pdf.text(`${year}`, 400, 200, { align: 'center' });\n        pdf.text(`${month}`, 1050, 200, { align: 'center' });\n        pdf.text(`${day}`, 1550, 200, { align: 'center' });\n\n        pdf.setFontSize(1300);\n        const verticalStretchMatrix = new pdf.Matrix(0.5, 0, 0, 1, 0, 0);\n        pdf.setCurrentTransformationMatrix(verticalStretchMatrix);  // Apply vertical stretch\n        pdf.text(`${CarPlate}`, 1900, 1270);  // Display China car plate\n        pdf.compatAPI(); // Switch back to \"compat\" mode\n\n        const pdfBlob = pdf.output('blob');\n        const url = URL.createObjectURL(pdfBlob);\n        setPdfUrl(url);\n    };\n\n    return (\n        <div>\n            <button onClick={generatePdf}>Generate PDF</button>\n            {pdfUrl && <iframe src={pdfUrl} style={{ height: '1000px', width: '100%' }} />}\n        </div>\n    );\n}\n\nexport default PDFGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}